name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      prepare-server:
        description: 'Trigger server preparation manually'
        required: false

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  VAULT_PASS: ${{ secrets.VAULT_PASS }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t newerr0r/web-project:latest .

      - name: Log in to Docker Hub
        run: echo "${DOCKER_HUB_PASSWORD}" | docker login -u "${DOCKER_HUB_USERNAME}" --password-stdin
        
      - name: Push Docker image to Docker Hub
        run: docker push newerr0r/web-project:latest

  prepare-server:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.head_commit.modified contains 'inventory' || github.event.head_commit.modified contains 'playbook.yml'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install ssh-agent
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH private key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | ssh-add -

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo apt-add-repository ppa:ansible/ansible
          sudo apt-get update
          sudo apt-get install -y ansible
      
      - name: Run Ansible playbook
        run: ansible-playbook playbook.yml -i inventory --vault-password-file=<(echo $VAULT_PASS)

  start-container:
    runs-on: ubuntu-latest
    needs: 
      - build-and-push
      - prepare-server
    if: github.event.head_commit.modified contains 'Dockerfile' && needs.build-and-push.result == 'success'
    steps:
      - name: Execute Docker commands on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker pull newerr0r/web-project:latest
            docker run -d -p 8000:80 newerr0r/web-project
